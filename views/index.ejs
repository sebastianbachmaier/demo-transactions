

<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head'); %>
</head>
<body>

<main>
  <div>
    <h1>Two transactions:</h1>
    <% if (error) { %>
        <div class="error">
        <%- error %>
        </div>
    <% } %>
    <br />
    <form action="/" method="get">
        <%# dropdown for sequelize isolation level %>
        <select name="isolationLevel" value="<%= isolationLevel %>">
            <% isolationLevelOptions.forEach((subject,index) => { %>
                <option value="<%-subject%>" <%= isolationLevel === subject ? 'selected' : '' %>>
                  <%- subject %>
                </option>
            <%})%>
        </select>


        <%# dropdown for sequelize t type %>
        <select name="type" value="<%= type %>">
            <% typeOptions.forEach((subject,index) => { %>
                <option value="<%-subject%>" <%= type === subject ? 'selected' : '' %>>
                  <%- subject %>
                </option>
            <%})%>
        </select>
        <button type="submit">call</button>
    </form>
    <br />
    <%- content %>
    <br />
    <div class="code">
    <pre><code class="language-typescript">

const t1 = await sequelize.transaction(t1options);
const t2 = await sequelize.transaction(t2options);

const personInTransaction = await Persons.findOne({
  where: {
    id: 1,
  },
  transaction: t1,
});

await personInTransaction.update(
  { name: "Updated John" },
  {
    transaction: t1,
  }
);

const samePerson = await Persons.findOne({
  where: { id: 1 },
  transaction: t2,
});


const order = await Orders.findOne({
  where: { id: 1 },
  transaction: t2,
});

await order.update(
  { OrderNumber: -100 },
  {
    transaction: t2,
  }
);

await t1.commit();
await t2.commit();
    </code></pre>
  </div>
  </div>
</main>

</body>
</html>
